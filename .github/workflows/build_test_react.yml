name: Automation

on:
  pull_request:
    branches: [main, development]
  repository_dispatch:

jobs:
  test-components:
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - name: Check out source code
        uses: actions/checkout@v3

      # Setup Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      # Get node_modules cache
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: /node_modules
          key: cache-node-modules

      # Install in case of cache miss
      # test
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install dependencies on cache miss
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      # Setup Node
      #- name: Setup Node
      #  uses: actions/setup-node@v3
      #  with:
      #    node-version: 16.x

      # Get app version from package.json
      #- name: Set app environment varibale
      #  run: echo "REACT_APP_VERSION=$(npm pkg get version)" >> $GITHUB_ENV

      # Run tests
      #- name: Run tests
      #  run: |
      #    npm ci
      #    npm run build
      #    npm test

  deploy-application:
    runs-on: ubuntu-latest
    needs: [test-components]
    if: github.base_ref == 'main'
    steps:
      # Checkout
      - name: Check out source code
        uses: actions/checkout@v3

      # Setup Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      # Get node_modules cache
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: cache-node-modules

      # Install in case of cache miss
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install dependencies on cache miss
        run: npm install

      # Get app version from package.json
      - name: Set app environment varibale
        run: echo "REACT_APP_VERSION=$(npm pkg get version)" >> $GITHUB_ENV

      # Install dependencies
      - name: Install dependencies
        run: npm i

      # Build application
      - name: Build application
        run: npm run build

      # Deploy application
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
          publish_dir: ./build
